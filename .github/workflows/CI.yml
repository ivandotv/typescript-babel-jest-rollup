name: Unit tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Node unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['10', '12', '14']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: |
          yarn type:check
          yarn test:ci
        env:
          CI: true

      - name: Generate Code Coverage
        if: matrix.node == 14
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./coverage/coverage-final.json

      # - name: 'Publish to NPM'
      #   if: github.event_name == 'push' && github.repository == 'ivandotv/untilted' && matrix.node == 14
      #   run: |
      #     node scripts/build.js
      #     yarn semantic-release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
